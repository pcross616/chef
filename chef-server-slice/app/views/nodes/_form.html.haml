.content
  .inner
    - if form_for != "edit"
      %div.group.form
        %label.label Name
        = text_field :id => "node_name", :name => "name", :class => "text_field", :value => params.has_key?(:name) ? h(params[:name]) : @node.name 
        %span.description The name of the Node 

    %div.group.form
      %table.sortable
        %tr
          %td 
            %label.label Available Roles
          %td
            %label.label Run List 
        %tr
          %td
            %div.sortable
              %ul#node_available_roles.connectedSortable
                - @available_roles.each do |role|
                  %li{ :id => "role[#{role}]", :class => 'ui-state-highlight' }= h role 
          %td{:rowspan => 3}
            %div.sortable.run-list
              %ul#for_node.connectedSortable
                - @run_list.each do |entry|
                  - type, name, fname = @run_list.parse_entry(entry)
                  %li{ :id => h(fname), :class => type == 'role' ? 'ui-state-highlight' : 'ui-state-default' }= h name 
          %td.help
            %span.description
              Drag recipes from the list of Available Recipes section on the left, and drop them
              in the "Recipes for this node" section on the right.  Then sort the recipes for this node list to the order you would like to see the recipes applied.
        %tr
          %td
            %label.label Available Recipes
        %tr
          %td
            %div.sortable
              %ul#node_available_recipes.connectedSortable
                - @available_recipes.each do |recipe|
                  %li{ :id => "recipe[#{recipe}]", :class => 'ui-state-default' }= h recipe 


    %div.group.form{:style => "position:relative;"}
      %label.label Attributes 
      //%div.editor
      //  %div#tree
      //  %div#jform
      //  %div.clear
      //  %script= "$(document).ready(function() { JSONeditor.start('tree', 'jform', #{@node.attribute.to_json}, false); });"
      %script= "$(document).ready(function() { $$(\"jsonstr\").value = JSON.stringify(#{@node.attribute.to_json}); if (BCJTEP.build()) { $$(\"results\").innerHTML = \"&nbsp;\"; $$(\"editortab\").className = \"show\"; $$(\"searchtab\").className = \"show\"; }});"
      %div#treecontainer
        %div#div1
      %div#tabcontainer
        %div#tab-container-1.tablayout
          %ul#tab-container-1-nav.tablayout
            %li
              %a{ :href => "#tab1"} source
            %li#editortab.noshow
              %a{ :href => "#tab2"} editor
            %li#searchtab.noshow
              %a{ :href => "#tab3"} search
          %div#tab1.tab
            %div#tab-container-2.tablayout.nested
              %ul#tab-container-2-nav.tablayout
                %li
                  %a{ :href => "#tab1a" } json
              %div#tab1a.tabn
                %table.icanhastable
                  %tr
                    %td
                      %div#refresh.button{:title => "Reload JSON from Tree"}
                      %div#buildbutton.button{:title => "Load JSON from Source"}
                  %tr
                    %td
                      %textarea#jsonstr{:wrap => "virtual", :cols => "55", :rows => "10", :class => ""}
          %div#tab2.tab
            %table.icanhastable
              %tr
                %td
                  %div#add.button{:title => "Add a new attribute"}
                  %div#delete.button{:title => "Delete current attribute"}
                  %div#savedstatus{:style => "display:none;"}
                    %img{ :src=> "/images/jsonedit/saved.png"}
                    %span Saved!
                  %div#deletedstatus{:style => "display:none;"}
                    %img{ :src=> "/images/jsonedit/deleted.png"}
                    %span Deleted!
                %td
                  type :
                  %select#jsontypes
                    %option Select Type
              %tr
                %td{:colspan => "2"}
                  %div#jsonnameinput
                    name :
                    %input#jsonname{:type => "text", :size=>"55", :class => ""}
              %tr
                %td{:colspan => "2"}
                  %textarea#jsonvalue{:wrap => "virtual", :cols => "55", :rows => "5", :class => ""}
                  %div#jsonpath &nbsp;
              %tr
                %td{:style => "text-align:left !important"}
                  %input#autodetect{:type => "checkbox", :checked=> "true"}
                  %label{:for => "autodetect"} Autodetect type of attribute?
                %td
                  %input#savebutton{:type => "button", :value => "Save Attribute"} 
                  %input#addbutton{:type => "button", :value => "Add Attribute"} 
          %div#tab3.tab
            %table.icanhastable
              %tr
                %td
                  %span search : 
                  %input#keyword{:type => "text"}
                  %input#search{:type => "button", :value => "Find"}
              %tr
                %td
                  %div#results &nbsp;
          %div#console
            %div#bar
              %a#consolebar Error Console
            %div#log

    %div.group.form
      %label.label Actions
      %span.description A JSON hash for default attributes for nodes of this node.  These attributes will only be applied if the node does not already have a value for the attributes.

    = form(:action => form_url, :method => :post, :id => form_id, :class => 'form') do
      %div.group
        .actions-bar
          .actions= submit submit_name, :id => submit_id, :class => 'button'

